Commits de Git

Un commit en un repositorio git registra un snapshot de todos los archivos en tu directorio. Es como un gran copy&paste, ¡pero incluso mejor!

Git pretende mantener los commits tan livianos como sea posible, por lo que no copia ciegamente el directorio completo cada vez que commiteás. Puede (cuando sea posible) comprimir un commit como un conjunto de cambios (o un "delta") entre una versión de tu repositorio y la siguiente.

Git mantiene, también, un historial de qué commits se hicieron cuándo. Es por eso que la mayoría de los commits tienen commits ancestros arriba suyo -- designamos esto con flechas en nuestra visualización. ¡Mantener el historial es genial para todos los que trabajan en el proyecto!

Hay un montón en lo que ahondar, pero por ahora podés pensar en los commits como snapshots de tu proyecto. Los commits son muy livianos, y ¡cambiar de uno a otro es terriblemente rápido!

==================================
Veamos cómo se ve esto en la práctica. A la derecha tenemos una visualización de un (pequeño) repositorio git. Hay dos commits ahora: el commit inicial, C0, y un commit que lo sigue, C1, que podría tener algunos cambios interesantes.

Dale al botón de abajo para hacer un nuevo commit

git commit

¡Ahí va! Increíble. Acabamos de hacer cambios al repositorio y los guardamos como un commit. El commit que acabamos de crear tiene un padre, C1, que referencia al commit en que se basó este.