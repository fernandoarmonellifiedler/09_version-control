Referencias relativas

Moverse por git usando los hashes de los commits puede volverse un tanto tedioso. En el mundo real no vas a tener una visualización de commits tan linda en la terminal, así que vas a tener que usar git log para ver los hashes.

Peor aún, los hashes en general son mucho más largos en el git real, también. Por ejemplo, el hash del commit que introduje en el nivel anterior es fed2da64c0efc5293610bdd892f82a58e8cbc5d8. No es algo particularmente fácil de nombrar...

Lo copado es que git es bastante astuto con los hashes. Sólo requiere que especifiques una cantidad de caracteres suficientes para identificar unívocamente al commit. Entonces, yo podría simplemente tipear fed2 en lugar de esa cadena larga de arriba.

==================================
Como ya dije, especificar los commits por su hash no es la manera más conveniente, y por eso git tiene referencias relativas. ¡Son geniales!

Con las referencias relativas podés arrancar de algún lugar recordable (como la rama bugFix, o HEAD) y manejarte desde ahí.

Los commits relativos son poderosos, pero ahora vamos a presentar sólo dos formas simples:

    Moverse un commit atrás con ^
    Moverse una cantidad de commits atrás con ~<num>

==================================
Veamos el operador ^ primero. Cada vez que le agregás eso al nombre de una referencia, le estás diciendo a git que use el padre del commit especificado.

Entonces, decir main^ es equivalente a "el primer padre de main".

main^^ es el abuelo (segunda generación de ancestros) de main

Veamos el commit que está antes de main acá.

git checkout main^

==================================
También podés referenciar a HEAD como una referencia relativa. Usémoslo un par de veces para movernos hacia atrás en nuestro árbol.

git checkout C3
git checkout HEAD^
git checkout HEAD^
git checkout HEAD^

¡Fácil! Podemos volver en el tiempo con HEAD^

==================================
Para completar este nivel, checkouteá el padre del commit de bugFix. Esto va a detachear a HEAD.

Podés especificar el hash si querés, pero mejor ¡tratá de usar la referencia relativa!

git chekout c3